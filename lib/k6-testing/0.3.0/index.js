import fe from"k6/execution";function E(t,e,r){if(!t){if(r)throw new A(e);fe.test.abort(e)}}var A=class extends Error{constructor(e){super(e),this.name="AssertionFailedError"}};function xe(){return typeof Deno<"u"?Deno.env.toObject():__ENV}var O=xe(),m={hasValue(t){return O[t]!==void 0},boolean(t){let e=O[t]?.toLowerCase();if(e===void 0)throw new Error(`Environment variable ${t} is not set`);return e!=="false"},enum(t,e){let r=O[t]?.toLowerCase();if(r===void 0)throw new Error(`Environment variable ${t} is not set`);if(!e.includes(r))throw new Error(`Invalid value for ${t}. Must be one of: ${e.join(", ")}`);return r},number(t){let e=O[t];if(!e)throw new Error(`Environment variable ${t} is not set`);let r=Number(e);if(Number.isNaN(r)||!Number.isFinite(r))throw new Error(`Environment variable ${t} must be a valid number, got: ${e}`);if(r<0)throw new Error(`Environment variable ${t} must be a non-negative number, got: ${e}`);return r}};var M={timeout:5e3,interval:100},ye={...M,soft:!1,colorize:!0,display:"pretty",assertFn:E},I=class t{static load(e={}){let r=t.loadFromEnv();return{...ye,...e,...r}}static loadFromEnv(){let e={};return m.hasValue("K6_TESTING_COLORIZE")&&(e.colorize=m.boolean("K6_TESTING_COLORIZE")),m.hasValue("K6_TESTING_DISPLAY")&&(e.display=m.enum("K6_TESTING_DISPLAY",["inline","pretty"])),m.hasValue("K6_TESTING_TIMEOUT")&&(e.timeout=m.number("K6_TESTING_TIMEOUT")),m.hasValue("K6_TESTING_INTERVAL")&&(e.interval=m.number("K6_TESTING_INTERVAL")),e}};function S(t){if(!t||t.length<=1)return;let e=t[t.length-1],r=e.filePath,n=e.fileName,s=e.lineNumber,a=e.columnNumber,i=`${r}:${s}:${a}`;return{filePath:r,fileName:n,lineNumber:s,columnNumber:a,at:i}}function N(t){if(!t)return[];let e=t.split(`
`),r=[];for(let n=0;n<e.length;n++){let s=e[n].trim();if(n===0&&s.startsWith("Error")||!s.startsWith("at "))continue;s=s.slice(3).trim();let a="<anonymous>",i=s,o=s.indexOf("("),l=s.indexOf("file://");l===0?(a="<anonymous>",i=s.slice(l)):o>=0?(a=s.slice(0,o).trim()||"<anonymous>",i=s.slice(o+1,s.lastIndexOf(")")).trim()):i=s;let p=i.lastIndexOf("(");p>=0&&(i=i.slice(0,p)),i.startsWith("file://")&&(i=i.slice(7));let u=i.lastIndexOf(":");if(u===-1)continue;let x=i.lastIndexOf(":",u-1);if(x===-1)continue;let y=i.slice(0,x),b=y.split("/").pop()??"",L=i.slice(x+1,u),C=i.slice(u+1);r.push({functionName:a,filePath:y,fileName:b,lineNumber:parseInt(L,10),columnNumber:parseInt(C,10)})}return r}var le={reset:"\x1B[0m",black:"\x1B[30m",red:"\x1B[31m",green:"\x1B[32m",yellow:"\x1B[33m",blue:"\x1B[34m",magenta:"\x1B[35m",cyan:"\x1B[36m",white:"\x1B[37m",brightBlack:"\x1B[90m",brightRed:"\x1B[91m",brightGreen:"\x1B[92m",brightYellow:"\x1B[93m",brightBlue:"\x1B[94m",brightMagenta:"\x1B[95m",brightCyan:"\x1B[96m",brightWhite:"\x1B[97m",darkGrey:"\x1B[90m"};function v(t,e){return`${le[e]}${t}${le.reset}`}var c=class{static renderers=new Map;static config={colorize:!0,display:"pretty"};static register(e,r){this.renderers.set(e,r)}static getRenderer(e){return this.renderers.get(e)||new R}static configure(e){this.config={...this.config,...e}}static getConfig(){return this.config}},P=class{getReceivedPlaceholder(){return"received"}getExpectedPlaceholder(){return"expected"}renderErrorLine(e,r){let n=(s,a)=>r.colorize?v(s,a):s;return"customMessage"in e&&typeof e.customMessage=="string"?n(e.customMessage,"white"):n("expect(","darkGrey")+n(this.getReceivedPlaceholder(),"red")+n(").","darkGrey")+n(this.getMatcherName(),"white")+this.renderMatcherArgs(n)}renderMatcherArgs(e){return e("()","darkGrey")}render(e,r){let n=(a,i)=>r.colorize?v(a,i):a,s=[{label:"Error",value:this.renderErrorLine(e,r),group:1},{label:"At",value:n(e.executionContext.at||"unknown location","darkGrey"),group:1},...this.getSpecificLines(e,n),{label:"Filename",value:n(e.executionContext.fileName,"darkGrey"),group:99},{label:"Line",value:n(e.executionContext.lineNumber.toString(),"darkGrey"),group:99}];return B.getFormatter(r.display).renderLines(s)}},f=class extends P{getSpecificLines(e,r){return[{label:"Received",value:r(e.received,"red"),group:2}]}},g=class extends P{getSpecificLines(e,r){return[{label:"Expected",value:r(e.expected,"green"),group:2},{label:"Received",value:r(e.received,"red"),group:2}]}renderMatcherArgs(e){return e("(","darkGrey")+e(this.getExpectedPlaceholder(),"green")+e(")","darkGrey")}},R=class{render(e,r){let n=(a,i)=>r.colorize?v(a,i):a,s=[{label:"Error",value:this.renderErrorLine(e,r),group:1},{label:"At",value:n(e.executionContext.at||"unknown location","darkGrey"),group:1},{label:"Expected",value:n(e.expected,"green"),group:2},{label:"Received",value:n(e.received,"red"),group:2},{label:"Filename",value:n(e.executionContext.fileName,"darkGrey"),group:3},{label:"Line",value:n(e.executionContext.lineNumber.toString(),"darkGrey"),group:3}];return B.getFormatter(r.display).renderLines(s)}renderErrorLine(e,r){let n=(s,a)=>r.colorize?v(s,a):s;return n("expect(","darkGrey")+n("received","red")+n(").","darkGrey")+n(`${e.matcherName}`,"white")+n("(","darkGrey")+n("expected","green")+n(")","darkGrey")}},_=class{renderLines(e){let r=Math.max(...e.filter(n=>!n.raw).map(({label:n})=>(n+":").length));return`

`+e.map(({label:n,value:s,raw:a},i)=>{let o;if(a)o=s;else{let p=n+":";o=" ".repeat(r-p.length)+p+" "+s}let l=e[i+1];return l&&e[i].group!==l.group?o+`
`:o}).join(`
`)+`

`}},F=class{renderLines(e){return e.map(({label:r,value:n})=>{let s=typeof n=="string"&&n.includes(" ")?`"${n}"`:n;return`${r.toLowerCase().replace(/\s+/g,"_")}=${s}`}).join(" ")}},B=class{static formatters=new Map([["pretty",new _],["inline",new F]]);static getFormatter(e){let r=this.formatters.get(e);if(!r)throw new Error(`Unknown display format: ${e}`);return r}};function G(t,e,r,n=!1){let s=e.assertFn??E;c.configure({colorize:e.colorize,display:e.display}),c.register("toBe",new R),c.register("toBeCloseTo",new $),c.register("toBeDefined",new D),c.register("toBeFalsy",new V),c.register("toBeGreaterThan",new q),c.register("toBeGreaterThanOrEqual",new j),c.register("toBeInstanceOf",new H),c.register("toBeLessThan",new U),c.register("toBeLessThanOrEqual",new J),c.register("toBeNaN",new K),c.register("toBeNull",new W),c.register("toBeTruthy",new Y),c.register("toBeUndefined",new Z),c.register("toEqual",new Q),c.register("toHaveLength",new X),c.register("toContain",new z),c.register("toContainEqual",new ee),c.register("toHaveProperty",new te);let a={usedAssert:s,isSoft:e.soft,isNegated:n,message:r};return{get not(){return G(t,e,r,!n)},toBe(o){d("toBe",()=>Object.is(t,o),o,t,a)},toBeCloseTo(o,l=2){let p=Math.pow(10,-l)*Math.max(Math.abs(t),Math.abs(o)),u=Math.abs(t-o);d("toBeCloseTo",()=>u<p,o,t,{...a,matcherSpecific:{precision:l,difference:u,expectedDifference:p}})},toBeDefined(){d("toBeDefined",()=>t!==void 0,"defined",JSON.stringify(t),a)},toBeFalsy(){d("toBeFalsy",()=>!t,"falsy",JSON.stringify(t),a)},toBeGreaterThan(o){d("toBeGreaterThan",()=>t>o,o,t,a)},toBeGreaterThanOrEqual(o){d("toBeGreaterThanOrEqual",()=>t>=o,o,t,a)},toBeInstanceOf(o){d("toBeInstanceOf",()=>t instanceof o,o.name,t.constructor.name,a)},toBeLessThan(o){d("toBeLessThan",()=>t<o,o,t,a)},toBeLessThanOrEqual(o){d("toBeLessThanOrEqual",()=>t<=o,o,t,a)},toBeNaN(){d("toBeNaN",()=>isNaN(t),"NaN",JSON.stringify(t),a)},toBeNull(){d("toBeNull",()=>t===null,"null",JSON.stringify(t),a)},toBeTruthy(){d("toBeTruthy",()=>!!t,"truthy",JSON.stringify(t),a)},toBeUndefined(){d("toBeUndefined",()=>t===void 0,"undefined",JSON.stringify(t),a)},toEqual(o){d("toEqual",()=>k(t,o),JSON.stringify(o),JSON.stringify(t),a)},toHaveLength(o){d("toHaveLength",()=>t.length===o,o.toString(),t.length.toString(),a)},toContain(o){let l="";if(typeof t=="string")l="string";else if(Array.isArray(t))l="array";else if(t instanceof Set)l="set";else throw new Error("toContain is only supported for strings, arrays, and sets");d("toContain",()=>{if(typeof t=="string")return t.includes(o);if(Array.isArray(t))return t.includes(o);if(t instanceof Set)return Array.from(t).includes(o);throw new Error("toContain is only supported for strings, arrays, and sets")},o,t,{...a,matcherSpecific:{receivedType:l}})},toContainEqual(o){let l="";if(Array.isArray(t))l="array";else if(t instanceof Set)l="set";else throw new Error("toContainEqual is only supported for arrays and sets");d("toContainEqual",()=>{if(Array.isArray(t))return t.some(p=>k(p,o));if(t instanceof Set)return Array.from(t).some(p=>k(p,o));throw new Error("toContainEqual is only supported for arrays and sets")},o,t,{...a,matcherSpecific:{receivedType:l}})},toHaveProperty(o,l){if(typeof t!="object"||t===null)throw new Error("toHaveProperty is only supported for objects");d("toHaveProperty",()=>{try{let u=he(t,o);return l!==void 0?k(u,l):!0}catch{return!1}},l!==void 0?l:o,t,{...a,matcherSpecific:{keyPath:o,hasExpectedValue:l!==void 0}})}}}function d(t,e,r,n,{usedAssert:s,isSoft:a,isNegated:i=!1,matcherSpecific:o={},message:l}){let p=me(t,r,n,{...o,isNegated:i},l),u=e();s(i?!u:u,c.getRenderer(t).render(p,c.getConfig()),a)}function me(t,e,r,n={},s){let a=N(new Error().stack),i=S(a);if(!i)throw new Error("k6 failed to capture execution context");return{executionContext:i,matcherName:t,expected:typeof e=="string"?e:JSON.stringify(e),received:JSON.stringify(r),matcherSpecific:n,customMessage:s}}var $=class extends g{getMatcherName(){return"toBeCloseTo"}getSpecificLines(e,r){let n=e.matcherSpecific;return[{label:"Expected precision",value:r(n.precision.toString(),"green"),group:3},{label:"Expected difference",value:"< "+r(`${n.expectedDifference}`,"green"),group:3},{label:"Received difference",value:r(n.difference.toString(),"red"),group:3}]}renderMatcherArgs(e){return e("(","darkGrey")+e("expected","green")+e(", ","darkGrey")+e("precision","white")+e(")","darkGrey")}},D=class extends f{getMatcherName(){return"toBeDefined"}},V=class extends f{getMatcherName(){return"toBeFalsy"}},q=class extends g{getMatcherName(){return"toBeGreaterThan"}getSpecificLines(e,r){return[{label:"Expected",value:"> "+r(e.expected,"green"),group:3},{label:"Received",value:r(e.received,"red"),group:3}]}},j=class extends g{getMatcherName(){return"toBeGreaterThanOrEqual"}getSpecificLines(e,r){return[{label:"Expected",value:">= "+r(e.expected,"green"),group:3},{label:"Received",value:r(e.received,"red"),group:3}]}},H=class extends g{getMatcherName(){return"toBeInstanceOf"}getSpecificLines(e,r){return[{label:"Expected constructor",value:r(e.expected,"green"),group:3},{label:"Received constructor",value:r(e.received,"red"),group:3}]}},U=class extends g{getMatcherName(){return"toBeLessThan"}getSpecificLines(e,r){return[{label:"Expected",value:"< "+r(e.expected,"green"),group:3},{label:"Received",value:r(e.received,"red"),group:3}]}},J=class extends g{getMatcherName(){return"toBeLessThanOrEqual"}getSpecificLines(e,r){return[{label:"Expected",value:"<= "+r(e.expected,"green"),group:3},{label:"Received",value:r(e.received,"red"),group:3}]}},K=class extends f{getMatcherName(){return"toBeNaN"}},W=class extends f{getMatcherName(){return"toBeNull"}},Y=class extends f{getMatcherName(){return"toBeTruthy"}},Z=class extends f{getMatcherName(){return"toBeUndefined"}},Q=class extends g{getMatcherName(){return"toEqual"}getSpecificLines(e,r){return[{label:"Expected",value:r(e.expected,"green"),group:3},{label:"Received",value:r(e.received,"red"),group:3}]}},X=class extends g{getMatcherName(){return"toHaveLength"}getSpecificLines(e,r){return[{label:"Expected length",value:r(e.expected,"green"),group:3},{label:"Received length",value:r(e.received,"red"),group:3},{label:"Received array",value:r(e.matcherSpecific?.receivedArray,"red"),group:3}]}},z=class extends g{getMatcherName(){return"toContain"}getSpecificLines(e,r){let n=e.matcherSpecific?.isNegated,s=typeof e.matcherSpecific?.receivedType=="string"?e.matcherSpecific?.receivedType:Array.isArray(JSON.parse(e.received))?"array":"string";return[{label:n?"Expected not to contain":"Expected to contain",value:r(e.expected,"green"),group:3},{label:`Received ${s}`,value:r(e.received,"red"),group:3}]}},ee=class extends g{getMatcherName(){return"toContainEqual"}getSpecificLines(e,r){let n=e.matcherSpecific?.isNegated,s=e.matcherSpecific?.receivedType;return[{label:n?"Expected not to contain equal":"Expected to contain equal",value:r(e.expected,"green"),group:3},{label:`Received ${s}`,value:r(e.received,"red"),group:3}]}},te=class extends g{getMatcherName(){return"toHaveProperty"}getSpecificLines(e,r){let n=e.matcherSpecific?.isNegated,s=e.matcherSpecific?.keyPath,a=e.matcherSpecific?.hasExpectedValue,i=[{label:"Property path",value:r(s,"white"),group:3}];return a?i.push({label:n?"Expected property not to equal":"Expected property to equal",value:r(e.expected,"green"),group:3}):i.push({label:n?"Expected property not to exist":"Expected property to exist",value:"",group:3}),i.push({label:"Received object",value:r(e.received,"red"),group:3}),i}renderMatcherArgs(e){return e("(","darkGrey")+e("keyPath","white")+e(", ","darkGrey")+e("expected?","green")+e(")","darkGrey")}};function k(t,e){if(t===e)return!0;if(t===null||e===null||typeof t!="object"||typeof e!="object")return!1;let r=Object.keys(t),n=Object.keys(e);return r.length!==n.length?!1:r.every(s=>n.includes(s)&&k(t[s],e[s]))}function he(t,e){if(e==="")throw new Error("Invalid path: empty string");let r=[],n="",s=!1;for(let i=0;i<e.length;i++){let o=e[i];if(o==="."&&!s)n&&(r.push(n),n="");else if(o==="[")n&&(r.push(n),n=""),s=!0;else if(o==="]")if(s)r.push(n),n="",s=!1;else throw new Error(`Invalid path: ${e}`);else n+=o}n&&r.push(n);let a=t;for(let i of r){if(a==null)throw new Error(`Property ${e} does not exist`);if(typeof i=="string"&&!isNaN(Number(i))){let o=Number(i);if(!Array.isArray(a))throw new Error(`Cannot access index ${i} of non-array`);if(o>=a.length)throw new Error(`Index ${i} out of bounds`);a=a[o]}else{if(typeof a!="object")throw new Error(`Cannot access property ${i} of non-object`);if(!Object.prototype.hasOwnProperty.call(a,i))throw new Error(`Property ${i} does not exist on object`);a=a[i]}}return a}function T(t,e,r,n=!1){let s=e.assertFn??E,a=e.soft??!1,i={timeout:e.timeout,interval:e.interval};c.configure({colorize:e.colorize,display:e.display}),c.register("toBeChecked",new re),c.register("toBeDisabled",new ne),c.register("toBeEditable",new oe),c.register("toBeEnabled",new ie),c.register("toBeHidden",new ae),c.register("toBeVisible",new se),c.register("toHaveValue",new ce);let o={locator:t,retryConfig:i,usedAssert:s,isSoft:a,isNegated:n,message:r};return{get not(){return T(t,e,r,!n)},async toBeChecked(p=i){await w("toBeChecked",async()=>await t.isChecked(),"checked","unchecked",{...o,options:p})},async toBeDisabled(p=i){await w("toBeDisabled",async()=>await t.isDisabled(),"disabled","enabled",{...o,options:p})},async toBeEditable(p=i){await w("toBeEditable",async()=>await t.isEditable(),"editable","uneditable",{...o,options:p})},async toBeEnabled(p=i){await w("toBeEnabled",async()=>await t.isEnabled(),"enabled","disabled",{...o,options:p})},async toBeHidden(p=i){await w("toBeHidden",async()=>await t.isHidden(),"hidden","visible",{...o,options:p})},async toBeVisible(p=i){await w("toBeVisible",async()=>await t.isVisible(),"visible","hidden",{...o,options:p})},async toHaveValue(p,u=i){let x=N(new Error().stack),y=S(x);if(!y)throw new Error("k6 failed to capture execution context");let b={executionContext:y,matcherName:"toHaveValue",expected:p,received:"unknown",matcherSpecific:{isNegated:n},customMessage:r};try{await ue(async()=>{let L=await t.inputValue(),C=p===L;s(n?!C:C,c.getRenderer("toHaveValue").render(b,c.getConfig()),a)},{...i,...u})}catch{s(!1,c.getRenderer("toHaveValue").render(b,c.getConfig()),a)}}}}function be(t,e,r,n={},s){let a=N(new Error().stack),i=S(a);if(!i)throw new Error("k6 failed to capture execution context");return{executionContext:i,matcherName:t,expected:e,received:r,customMessage:s,...n}}async function w(t,e,r,n,{locator:s,retryConfig:a,usedAssert:i,isSoft:o,isNegated:l=!1,options:p={},message:u}){let x=be(t,r,n,{matcherSpecific:{locator:s,timeout:p.timeout,isNegated:l}},u);try{await ue(async()=>{let y=await e(),b=l?!y:y;if(!b)throw new Error("matcher failed");i(b,c.getRenderer(t).render(x,c.getConfig()),o)},{...a,...p})}catch{i(!1,c.getRenderer(t).render(x,c.getConfig()),o)}}var h=class extends f{getMatcherName(){return`toBe${this.state[0].toUpperCase()}${this.state.slice(1)}`}getReceivedPlaceholder(){return"locator"}getSpecificLines(e,r){return[{label:"Expected",value:this.state,group:3},{label:"Received",value:this.oppositeState,group:3},{label:"Call log",value:"",group:3},{label:"",value:r(`  - expect.toBe${this.state[0].toUpperCase()}${this.state.slice(1)} with timeout ${e.matcherSpecific?.timeout}ms`,"darkGrey"),group:3,raw:!0},{label:"",value:r("  - waiting for locator","darkGrey"),group:3,raw:!0}]}},re=class extends h{state="checked";oppositeState="unchecked"},ne=class extends h{state="disabled";oppositeState="enabled"},oe=class extends h{state="editable";oppositeState="uneditable"},ie=class extends h{state="enabled";oppositeState="disabled"},ae=class extends h{state="hidden";oppositeState="visible"},se=class extends h{state="visible";oppositeState="hidden"},ce=class extends g{getMatcherName(){return"toHaveValue"}getSpecificLines(e,r){return[{label:"Expected",value:r(e.expected,"green"),group:3},{label:"Received",value:r(e.received,"red"),group:3},{label:"Call log",value:"",group:3},{label:"",value:r(`  - expect.toHaveValue with timeout ${e.matcherSpecific?.timeout}ms`,"darkGrey"),group:3,raw:!0},{label:"",value:r("  - waiting for locator","darkGrey"),group:3,raw:!0}]}};async function ue(t,e={}){let r=e.timeout??M.timeout,n=e.interval??M.interval,s=e._now??(()=>Date.now()),a=e._sleep??(o=>new Promise(l=>setTimeout(l,o))),i=s();for(;s()-i<r;){try{return await t(),!0}catch{}await a(n)}throw new pe(`Expect condition not met within ${r}ms timeout`)}var pe=class extends Error{constructor(e){super(e),this.name="RetryTimeoutError"}};var Ee=ge();function ge(t){let e=I.load(t);return Object.assign(function(r,n){return de(r)?T(r,e,n):G(r,e,n)},{soft(r,n){return de(r)?T(r,{...e,soft:!0},n):G(r,{...e,soft:!0},n)},configure(r){return ge(r)},get config(){return{...e}}})}function de(t){if(!t||typeof t!="object")return!1;let e=["clear","isEnabled","isHidden","getAttribute","selectOption","press","type","dispatchEvent","dblclick","setChecked","isDisabled","focus","innerText","inputValue","check","isEditable","fill","textContent","hover","waitFor","click","uncheck","isChecked","isVisible","innerHTML","tap"],r=n=>e.every(s=>s in n);return t!=null&&typeof t=="object"&&r(t)}export{v as colorize,Ee as expect};
//# sourceMappingURL=index.js.map
