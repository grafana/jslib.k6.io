var m=class s{_protocol;_hostname;_port;static DEFAULT_PROTOCOL="https";constructor(e){let o=!e.startsWith("http://")&&!e.startsWith("https://")?`${s.DEFAULT_PROTOCOL}://${e}`:e,r=o.match(/^https?:/),n=o.replace(/^https?:\/\//,""),[i]=n.split("/");this._protocol=r?r[0].slice(0,-1):s.DEFAULT_PROTOCOL,this._hostname=i.split(":")[0],this._port=i.split(":")[1]?parseInt(i.split(":")[1]):void 0}copy(){return new s(this.href)}get host(){return this._port?`${this._hostname}:${this._port}`:this._hostname}set host(e){let[t,o]=e.split(":");this._hostname=t,this._port=o?parseInt(o):void 0}get hostname(){return this._hostname}set hostname(e){this._hostname=e}get href(){return`${this.protocol}://${this.host}`}set href(e){let t=e.match(/^https?:/),o=e.replace(/^https?:\/\//,""),[r]=o.split("/");this._protocol=t?t[0].slice(0,-1):s.DEFAULT_PROTOCOL,this._hostname=r.split(":")[0],this._port=r.split(":")[1]?parseInt(r.split(":")[1]):void 0}get port(){return this._port}set port(e){this._port=e}get protocol(){return this._protocol}set protocol(e){this._protocol=e}};var M=class s{region;accessKeyId;secretAccessKey;sessionToken;endpoint;static fromEnvironment(e){let t=__ENV.AWS_REGION,o=__ENV.AWS_ACCESS_KEY_ID,r=__ENV.AWS_SECRET_ACCESS_KEY,n=__ENV.AWS_SESSION_TOKEN,i=e?.endpoint;return new s({region:t,accessKeyId:o,secretAccessKey:r,sessionToken:n,endpoint:i})}constructor(e){if(!e.region||e.region==="")throw new f(`invalid AWS region; reason: expected a valid AWS region name (e.g. "us-east-1"), got \`${e.region}\``);if(!e.accessKeyId||e.accessKeyId==="")throw new f(`invalid AWS access key ID; reason: expected a non empty string, got \`${e.accessKeyId}\``);if(e.accessKeyId.length<16||e.accessKeyId.length>128&&e.sessionToken!=null)throw new f(`invalid AWS access key ID; reason: size should be between 16 and 128 characters, got ${e.accessKeyId.length}`);if(!e.secretAccessKey||e.secretAccessKey==="")throw new f(`invalid AWS secret access key; reason: expected a non empty string, got \`${e.secretAccessKey}\``);this.region=e.region,this.accessKeyId=e.accessKeyId,this.secretAccessKey=e.secretAccessKey,e.sessionToken!==void 0&&(this.sessionToken=e.sessionToken),e.endpoint!==void 0&&(typeof e.endpoint=="string"?this.endpoint=new m(e.endpoint):this.endpoint=e.endpoint)}},f=class extends Error{constructor(e){super(e)}};import{parseHTML as pe}from"k6/html";var T=class s extends Error{code;constructor(e,t){super(e),this.name="AWSError",this.code=t}static parseXML(e){let t=pe(e);return new s(t.find("Message").text(),t.find("Code").text())}static parse(e){if(e.headers["Content-Type"]==="application/json"){let t=e.json()||{},o=t.Message||t.message||t.__type||"An error occurred on the server side",r=e.headers["X-Amzn-Errortype"]||t.__type;return new s(o,r)}else return s.parseXML(e.body)}},g=class extends Error{code;name;constructor(e,t){super(ge[t]||"An unknown error occurred"),this.name=e,this.code=t}},P=class extends g{constructor(e){super("GeneralError",e)}},H=class extends g{constructor(e){super("DNSError",e)}},D=class extends g{constructor(e){super("TCPError",e)}},I=class extends g{constructor(e){super("TLSError",e)}},w=class extends g{constructor(e){super("HTTP2Error",e)}};var ge={1e3:"A generic error that isn\u2019t any of the ones listed below",1010:"A non-TCP network error - this is a placeholder and there is no error currently known to trigger it",1020:"An invalid URL was specified",1050:"The HTTP request has timed out",1100:"A generic DNS error that isn\u2019t any of the ones listed below",1101:"No IP for the provided host was found",1110:"Blacklisted IP was resolved or a connection to such was tried to be established",1111:"Blacklisted hostname using The Block Hostnames option",1200:"A generic TCP error that isn\u2019t any of the ones listed below",1201:"A \u201Cbroken pipe\u201D on write - the other side has likely closed the connection",1202:"An unknown TCP error - We got an error that we don\u2019t recognize but it is from the operating system and has errno set on it. The message in error includes the operation(write,read) and the errno, the OS, and the original message of the error",1210:"General TCP dial error",1211:"Dial timeout error - the timeout for the dial was reached",1212:"Dial connection refused - the connection was refused by the other party on dial",1213:"Dial unknown error",1220:"Reset by peer - the connection was reset by the other party, most likely a server",1300:"General TLS error",1310:"Unknown authority - the certificate issuer is unknown",1311:"The certificate doesn\u2019t match the hostname",1600:"A generic HTTP/2 error that isn\u2019t any of the ones listed below",1610:"A general HTTP/2 GoAway error"};import Te from"k6/http";var C=class{awsConfig;serviceName;baseRequestParams={responseType:"text"};_endpoint;constructor(e,t){this.awsConfig=e,this.serviceName=t,e.endpoint!=null&&(this._endpoint=e.endpoint)}get endpoint(){return this._endpoint==null&&(this._endpoint=new m(`https://${this.serviceName}.${this.awsConfig.region}.amazonaws.com`)),this._endpoint}set endpoint(e){this._endpoint=e}handleError(e,t){let o=e.status,r=e.error_code,n=e.error;if(o>=200&&o<300&&n==""&&r===0)return!1;switch(r){case 1e3:case 1010:case 1020:case 1050:throw new P(r);case 1100:case 1101:case 1110:case 1111:throw new H(r);case 1200:case 1201:case 1202:case 1210:case 1211:case 1212:case 1213:case 1220:throw new D(r);case 1300:case 1310:case 1311:throw new I(r);case 1600:case 1610:throw new w(r)}return!0}};import u from"k6/crypto";var Y="X-Amz-Algorithm",Q="X-Amz-Credential",U="X-Amz-Date",z="X-Amz-Expires",G="X-Amz-Signature",q="X-Amz-SignedHeaders",ue="X-Amz-Target",L="X-Amz-Security-Token",b="x-amz-content-sha256",$=U.toLowerCase(),F=G.toLowerCase(),X=ue.toLowerCase(),V=L.toLowerCase(),B="authorization",he="date",J=[B,$,he],N="host",ee={authorization:!0,"cache-control":!0,connection:!0,expect:!0,from:!0,"keep-alive":!0,"max-forwards":!0,pragma:!0,referer:!0,te:!0,trailer:!0,"transfer-encoding":!0,upgrade:!0,"user-agent":!0,"x-amzn-trace-id":!0},K="aws4_request",O="AWS4-HMAC-SHA256",te=60*60*24*7,re="e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855";var ne="UNSIGNED-PAYLOAD";function se(s,e){s=s.toLowerCase();for(let t of Object.keys(e))if(s===t.toLowerCase())return!0;return!1}function oe(s){return typeof ArrayBuffer=="function"&&(s instanceof ArrayBuffer||Object.prototype.toString.call(s)==="[object ArrayBuffer]")}var k=class{service;region;credentials;uriEscapePath;applyChecksum;constructor({service:e,region:t,credentials:o,uriEscapePath:r,applyChecksum:n}){this.service=e,this.region=t,this.credentials=o,this.uriEscapePath=typeof r=="boolean"?r:!0,this.applyChecksum=typeof n=="boolean"?n:!0}sign(e,t={}){let r={...{signingDate:new Date,unsignableHeaders:new Set,signableHeaders:new Set},...t},{longDate:n,shortDate:i}=ie(r.signingDate),a=r.signingService||this.service,d=r.signingRegion||this.region,A=`${i}/${d}/${a}/${K}`;e.headers[N]||(e.headers[N]=e.endpoint.hostname);for(let R of Object.keys(e.headers))J.indexOf(R.toLowerCase())>-1&&delete e.headers[R];e.headers[$]=n,this.credentials.sessionToken&&(e.headers[V]=this.credentials.sessionToken),ArrayBuffer.isView(e.body)&&(e.body=e.body.buffer),e.body||(e.body="");let l=this.computePayloadHash(e);!se(b,e.headers)&&this.applyChecksum&&(e.headers[b]=l);let E=this.computeCanonicalHeaders(e,r.unsignableHeaders,r.signableHeaders),y=this.calculateSignature(n,A,this.deriveSigningKey(this.credentials,a,d,i),this.createCanonicalRequest(e,E,l));e.headers[B]=`${O} Credential=${this.credentials.accessKeyId}/${A}, SignedHeaders=${Object.keys(E).sort().join(";")}, Signature=${y}`;let p=e.endpoint.href;return e.path&&(!p.endsWith("/")&&!e.path.startsWith("/")&&(p+="/"),p+=e.path),e.query&&(p+=`?${this.serializeQueryParameters(e.query)}`),{url:p,...e}}presign(e,t={}){let{signingDate:o=new Date,expiresIn:r=3600,unsignableHeaders:n,unhoistableHeaders:i,signableHeaders:a,signingRegion:d,signingService:A}=t,{longDate:l,shortDate:E}=ie(o),y=d||this.region,p=A||this.service;if(r>te)throw new _("Signature version 4 presigned URLs can't be valid for more than 7 days");let R=`${E}/${y}/${p}/${K}`,c=this.moveHeadersToQuery(e,{unhoistableHeaders:i});c.headers[N]||(c.headers[N]=e.endpoint.hostname),this.credentials.sessionToken&&(c.query[L]=this.credentials.sessionToken),c.query[Y]=O,c.query[Q]=`${this.credentials.accessKeyId}/${R}`,c.query[U]=l,c.query[z]=r.toString(10);let j=this.computeCanonicalHeaders(c,n,a);c.query[q]=Object.keys(j).sort().join(";");let ae=this.deriveSigningKey(this.credentials,p,y,E),ce=this.computePayloadHash(e),de=this.createCanonicalRequest(c,j,ce);c.query[G]=this.calculateSignature(l,R,ae,de);let S=e.endpoint.href;return c.path&&(!S.endsWith("/")&&!c.path.startsWith("/")&&(S+="/"),S+=c.path),c.query&&(S+=`?${this.serializeQueryParameters(c.query)}`),{url:S,...c}}createCanonicalRequest(e,t,o){let r=Object.keys(t).sort(),n=r.map(a=>`${a}:${t[a]}`).join(`
`),i=r.join(";");return`${e.method}
${this.computeCanonicalURI(e)}
${this.computeCanonicalQuerystring(e)}
${n}

${i}
${o}`}createStringToSign(e,t,o){let r=u.sha256(o,"hex");return`${O}
${e}
${t}
${r}`}calculateSignature(e,t,o,r){let n=this.createStringToSign(e,t,r);return u.hmac("sha256",o,n,"hex")}deriveSigningKey(e,t,o,r){let n=e.secretAccessKey,i=u.hmac("sha256","AWS4"+n,r,"binary"),a=v(i),d=u.hmac("sha256",W(a),o,"binary"),A=v(d),l=u.hmac("sha256",W(A),t,"binary"),E=v(l),y=u.hmac("sha256",W(E),"aws4_request","binary");return v(y)}computeCanonicalURI({path:e}){if(this.uriEscapePath){let t=[];for(let d of e.split("/"))d?.length!==0&&d!=="."&&(d===".."?t.pop():t.push(d));let o=e?.startsWith("/")?"/":"",r=t.join("/"),n=t.length>0&&e?.endsWith("/")?"/":"",i=`${o}${r}${n}`;return encodeURIComponent(i).replace(/%2F/g,"/")}return e}computeCanonicalQuerystring({query:e={}}){let t=[],o={};for(let r of Object.keys(e).sort()){if(r.toLowerCase()===F)continue;t.push(r);let n=e[r];typeof n=="string"?o[r]=`${h(r)}=${h(n)}`:Array.isArray(n)&&(o[r]=n.slice(0).sort().reduce((i,a)=>i.concat([`${h(r)}=${h(a)}`]),[]).join("&"))}return t.map(r=>o[r]).filter(r=>r).join("&")}computeCanonicalHeaders({headers:e},t,o){let r={};for(let n of Object.keys(e).sort()){if(e[n]==null)continue;let i=n.toLowerCase();(i in ee||t?.has(i))&&(!o||o&&!o.has(i))||typeof e[n]=="string"&&(r[i]=e[n]=e[n].trim().replace(/\s+/g," "))}return r}computePayloadHash({headers:e,body:t}){return e[b]?e[b]:t==null?re:typeof t=="string"||oe(t)?u.sha256(t,"hex").toLowerCase():ArrayBuffer.isView(t)?u.sha256(t.buffer,"hex").toLowerCase():ne}moveHeadersToQuery(e,t={}){let o=JSON.parse(JSON.stringify(e)),{headers:r,query:n={}}=o;for(let i of Object.keys(r)){let a=i.toLowerCase();a.slice(0,6)==="x-amz-"&&!t.unhoistableHeaders?.has(a)&&(n[i]=r[i],delete r[i])}return{...o,headers:r,query:n}}serializeQueryParameters(e,t){let o=[],r={};for(let n of Object.keys(e).sort()){if(t?.includes(n.toLowerCase()))continue;o.push(n);let i=e[n];typeof i=="string"?r[n]=`${h(n)}=${h(i)}`:Array.isArray(i)&&(r[n]=i.slice(0).sort().reduce((a,d)=>a.concat([`${h(n)}=${h(d)}`]),[]).join("&"))}return o.map(n=>r[n]).filter(n=>n).join("&")}},_=class extends T{constructor(e,t){super(e,t),this.name="InvalidSignatureError"}};function v(s){return new Uint8Array(s)}function W(s){return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}function h(s){let e=t=>`%${t.charCodeAt(0).toString(16).toUpperCase()}`;return encodeURIComponent(s).replace(/[!'()*]/g,e)}function ie(s){let e=Ee(s).replace(/[-:]/g,"");return{longDate:e,shortDate:e.slice(0,8)}}function Ee(s){return fe(s).toISOString().replace(/\.\d{3}Z$/,"Z")}function fe(s){return typeof s=="number"?new Date(s*1e3):typeof s=="string"?Number(s)?new Date(Number(s)*1e3):new Date(s):s}var Z=class extends C{signature;method;commonHeaders;constructor(e){super(e,"events"),this.signature=new k({service:this.serviceName,region:this.awsConfig.region,credentials:{accessKeyId:this.awsConfig.accessKeyId,secretAccessKey:this.awsConfig.secretAccessKey,sessionToken:this.awsConfig.sessionToken},uriEscapePath:!0,applyChecksum:!1}),this.method="POST",this.commonHeaders={"Content-Type":"application/x-amz-json-1.1"}}async putEvents(e){let t={...e,Entries:e.Entries.map(n=>({...n,Detail:JSON.stringify(n.Detail)}))},o=this.signature.sign({method:this.method,endpoint:this.endpoint,path:"/",headers:{...this.commonHeaders,[X]:"AWSEvents.PutEvents"},body:JSON.stringify(t)},{}),r=await Te.asyncRequest(this.method,o.url,o.body,{...this.baseRequestParams,headers:o.headers});this.handleError(r,"PutEvents")}handleError(e,t){if(!super.handleError(e,t))return!1;let r=e.error_code,n=e.json();if(r>=1400&&r<=1499){let i=n.Message||n.message||n.__type;throw n.__type==="InvalidSignatureException"?new _(i,n.__type):new x(i,n.__type,t)}if(r===1500)throw new x("An error occured on the server side","InternalServiceError",t);return!0}};var x=class extends T{operation;constructor(e,t,o){super(e,t),this.name="EventBridgeServiceError",this.operation=o}};export{M as AWSConfig,T as AWSError,H as DNSError,Z as EventBridgeClient,x as EventBridgeServiceError,P as GeneralError,w as HTTP2Error,f as InvalidAWSConfigError,_ as InvalidSignatureError,g as NetworkError,D as TCPError,I as TLSError};
//# sourceMappingURL=event-bridge.js.map
