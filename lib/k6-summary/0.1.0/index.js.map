{
  "version": 3,
  "sources": ["../src/junit.js", "../src/text.js", "../src/index.js"],
  "sourcesContent": ["const replacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  \"'\": '&#39;',\n  '\"': '&quot;',\n};\n\nfunction escapeHTML(str) {\n  return str.replace(/[&<>'\"]/g, (char) => replacements[char]);\n}\n\nfunction generateJUnitXML(data, options) {\n  const name =\n    options && options.name ? escapeHTML(options.name) : 'k6 thresholds';\n  const classname =\n    options && options.classname\n      ? escapeHTML(options.classname)\n      : 'Unnamed folder';\n  let failures = 0;\n  let cases = [];\n\n  Object.entries(data.metrics).forEach(([metricName, metric]) => {\n    if (!metric.thresholds) {\n      return;\n    }\n    Object.entries(metric.thresholds).forEach(([thresholdName, threshold]) => {\n      const testcaseName = `${escapeHTML(metricName)} - ${escapeHTML(\n        thresholdName,\n      )}`;\n\n      if (threshold.ok) {\n        cases.push(\n          `<testcase name=\"${testcaseName}\" classname=\"${classname}\" />`,\n        );\n      } else {\n        failures++;\n        const failureMessage =\n          `${metric.type} threshold failed: ` +\n          Object.entries(metric.values)\n            .map(([key, value]) => `${key} value: ${value}`)\n            .join(', ');\n\n        cases.push(\n          `<testcase name=\"${testcaseName}\" classname=\"${classname}\"><failure message=\"${escapeHTML(\n            failureMessage,\n          )}\" /></testcase>`,\n        );\n      }\n    });\n  });\n\n  return `<?xml version=\"1.0\"?>\n    <testsuites tests=\"${cases.length}\" failures=\"${failures}\">\n      <testsuite name=\"${name}\" tests=\"${cases.length}\" failures=\"${failures}\">\n        ${cases.join('\\n')}\n      </testsuite>\n    </testsuites>`;\n}\n\nexports.jUnit = generateJUnitXML;\n", "var forEach = function (obj, callback) {\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      if (callback(key, obj[key])) {\n        break;\n      }\n    }\n  }\n};\n\nvar palette = {\n  bold: 1,\n  faint: 2,\n  red: 31,\n  green: 32,\n  cyan: 36,\n  //TODO: add others?\n};\n\nvar groupPrefix = '\u2588';\nvar detailsPrefix = '\u21B3';\nvar succMark = '\u2713';\nvar failMark = '\u2717';\nvar defaultOptions = {\n  indent: ' ',\n  enableColors: true,\n  summaryTimeUnit: null,\n  summaryTrendStats: null,\n};\n\n// strWidth tries to return the actual width the string will take up on the\n// screen, without any terminal formatting, unicode ligatures, etc.\nfunction strWidth(s) {\n  // TODO: determine if NFC or NFKD are not more appropriate? or just give up? https://hsivonen.fi/string-length/\n  var data = s.normalize('NFKC'); // This used to be NFKD in Go, but this should be better\n  var inEscSeq = false;\n  var inLongEscSeq = false;\n  var width = 0;\n  for (var char of data) {\n    if (char.done) {\n      break;\n    }\n\n    // Skip over ANSI escape codes.\n    if (char == '\\x1b') {\n      inEscSeq = true;\n      continue;\n    }\n    if (inEscSeq && char == '[') {\n      inLongEscSeq = true;\n      continue;\n    }\n    if (\n      inEscSeq &&\n      inLongEscSeq &&\n      char.charCodeAt(0) >= 0x40 &&\n      char.charCodeAt(0) <= 0x7e\n    ) {\n      inEscSeq = false;\n      inLongEscSeq = false;\n      continue;\n    }\n    if (\n      inEscSeq &&\n      !inLongEscSeq &&\n      char.charCodeAt(0) >= 0x40 &&\n      char.charCodeAt(0) <= 0x5f\n    ) {\n      inEscSeq = false;\n      continue;\n    }\n\n    if (!inEscSeq && !inLongEscSeq) {\n      width++;\n    }\n  }\n  return width;\n}\n\nfunction summarizeCheck(indent, check, decorate) {\n  if (check.fails == 0) {\n    return decorate(indent + succMark + ' ' + check.name, palette.green);\n  }\n\n  var succPercent = Math.floor(\n    (100 * check.passes) / (check.passes + check.fails),\n  );\n  return decorate(\n    indent +\n      failMark +\n      ' ' +\n      check.name +\n      '\\n' +\n      indent +\n      ' ' +\n      detailsPrefix +\n      '  ' +\n      succPercent +\n      '% \u2014 ' +\n      succMark +\n      ' ' +\n      check.passes +\n      ' / ' +\n      failMark +\n      ' ' +\n      check.fails,\n    palette.red,\n  );\n}\n\nfunction summarizeGroup(indent, group, decorate) {\n  var result = [];\n  if (group.name != '') {\n    result.push(indent + groupPrefix + ' ' + group.name + '\\n');\n    indent = indent + '  ';\n  }\n\n  for (let i = 0; i < group.checks.length; i++) {\n    result.push(summarizeCheck(indent, group.checks[i], decorate));\n  }\n  if (group.checks.length > 0) {\n    result.push('');\n  }\n  for (let i = 0; i < group.groups.length; i++) {\n    Array.prototype.push.apply(\n      result,\n      summarizeGroup(indent, group.groups[i], decorate),\n    );\n  }\n\n  return result;\n}\n\nfunction displayNameForMetric(name) {\n  var subMetricPos = name.indexOf('{');\n  if (subMetricPos >= 0) {\n    return '{ ' + name.substring(subMetricPos + 1, name.length - 1) + ' }';\n  }\n  return name;\n}\n\nfunction indentForMetric(name) {\n  if (name.indexOf('{') >= 0) {\n    return '  ';\n  }\n  return '';\n}\n\nfunction humanizeBytes(bytes) {\n  var units = ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  var base = 1000;\n  if (bytes < 10) {\n    return bytes + ' B';\n  }\n\n  var e = Math.floor(Math.log(bytes) / Math.log(base));\n  var suffix = units[e | 0];\n  var val = Math.floor((bytes / Math.pow(base, e)) * 10 + 0.5) / 10;\n  return val.toFixed(val < 10 ? 1 : 0) + ' ' + suffix;\n}\n\nvar unitMap = {\n  s: { unit: 's', coef: 0.001 },\n  ms: { unit: 'ms', coef: 1 },\n  us: { unit: '\u00B5s', coef: 1000 },\n};\n\nfunction toFixedNoTrailingZeros(val, prec) {\n  // TODO: figure out something better?\n  return parseFloat(val.toFixed(prec)).toString();\n}\n\nfunction toFixedNoTrailingZerosTrunc(val, prec) {\n  var mult = Math.pow(10, prec);\n  return toFixedNoTrailingZeros(Math.trunc(mult * val) / mult, prec);\n}\n\nfunction humanizeGenericDuration(dur) {\n  if (dur === 0) {\n    return '0s';\n  }\n\n  if (dur < 0.001) {\n    // smaller than a microsecond, print nanoseconds\n    return Math.trunc(dur * 1000000) + 'ns';\n  }\n  if (dur < 1) {\n    // smaller than a millisecond, print microseconds\n    return toFixedNoTrailingZerosTrunc(dur * 1000, 2) + '\u00B5s';\n  }\n  if (dur < 1000) {\n    // duration is smaller than a second\n    return toFixedNoTrailingZerosTrunc(dur, 2) + 'ms';\n  }\n\n  var result =\n    toFixedNoTrailingZerosTrunc((dur % 60000) / 1000, dur > 60000 ? 0 : 2) +\n    's';\n  var rem = Math.trunc(dur / 60000);\n  if (rem < 1) {\n    // less than a minute\n    return result;\n  }\n  result = (rem % 60) + 'm' + result;\n  rem = Math.trunc(rem / 60);\n  if (rem < 1) {\n    // less than an hour\n    return result;\n  }\n  return rem + 'h' + result;\n}\n\nfunction humanizeDuration(dur, timeUnit) {\n  if (\n    timeUnit !== '' &&\n    Object.prototype.hasOwnProperty.call(unitMap, timeUnit)\n  ) {\n    return (dur * unitMap[timeUnit].coef).toFixed(2) + unitMap[timeUnit].unit;\n  }\n\n  return humanizeGenericDuration(dur);\n}\n\nfunction humanizeValue(val, metric, timeUnit) {\n  if (metric.type == 'rate') {\n    // Truncate instead of round when decreasing precision to 2 decimal places\n    return (Math.trunc(val * 100 * 100) / 100).toFixed(2) + '%';\n  }\n\n  switch (metric.contains) {\n    case 'data':\n      return humanizeBytes(val);\n    case 'time':\n      return humanizeDuration(val, timeUnit);\n    default:\n      return toFixedNoTrailingZeros(val, 6);\n  }\n}\n\nfunction nonTrendMetricValueForSum(metric, timeUnit) {\n  switch (metric.type) {\n    case 'counter':\n      return [\n        humanizeValue(metric.values.count, metric, timeUnit),\n        humanizeValue(metric.values.rate, metric, timeUnit) + '/s',\n      ];\n    case 'gauge':\n      return [\n        humanizeValue(metric.values.value, metric, timeUnit),\n        'min=' + humanizeValue(metric.values.min, metric, timeUnit),\n        'max=' + humanizeValue(metric.values.max, metric, timeUnit),\n      ];\n    case 'rate':\n      return [\n        humanizeValue(metric.values.rate, metric, timeUnit),\n        succMark + ' ' + metric.values.passes,\n        failMark + ' ' + metric.values.fails,\n      ];\n    default:\n      return ['[no data]'];\n  }\n}\n\nfunction summarizeMetrics(options, data, decorate) {\n  var indent = options.indent + '  ';\n  var result = [];\n\n  var names = [];\n  var nameLenMax = 0;\n\n  var nonTrendValues = {};\n  var nonTrendValueMaxLen = 0;\n  var nonTrendExtras = {};\n  var nonTrendExtraMaxLens = [0, 0];\n\n  var trendCols = {};\n  var numTrendColumns = options.summaryTrendStats.length;\n  var trendColMaxLens = new Array(numTrendColumns).fill(0);\n  forEach(data.metrics, function (name, metric) {\n    names.push(name);\n    // When calculating widths for metrics, account for the indentation on submetrics.\n    var displayName = indentForMetric(name) + displayNameForMetric(name);\n    var displayNameWidth = strWidth(displayName);\n    if (displayNameWidth > nameLenMax) {\n      nameLenMax = displayNameWidth;\n    }\n\n    if (metric.type == 'trend') {\n      var cols = [];\n      for (let i = 0; i < numTrendColumns; i++) {\n        var tc = options.summaryTrendStats[i];\n        var value = metric.values[tc];\n        if (tc === 'count') {\n          value = value.toString();\n        } else {\n          value = humanizeValue(value, metric, options.summaryTimeUnit);\n        }\n        var valLen = strWidth(value);\n        if (valLen > trendColMaxLens[i]) {\n          trendColMaxLens[i] = valLen;\n        }\n        cols[i] = value;\n      }\n      trendCols[name] = cols;\n      return;\n    }\n    var values = nonTrendMetricValueForSum(metric, options.summaryTimeUnit);\n    nonTrendValues[name] = values[0];\n    var valueLen = strWidth(values[0]);\n    if (valueLen > nonTrendValueMaxLen) {\n      nonTrendValueMaxLen = valueLen;\n    }\n    nonTrendExtras[name] = values.slice(1);\n    for (let i = 1; i < values.length; i++) {\n      var extraLen = strWidth(values[i]);\n      if (extraLen > nonTrendExtraMaxLens[i - 1]) {\n        nonTrendExtraMaxLens[i - 1] = extraLen;\n      }\n    }\n  });\n\n  // sort all metrics but keep sub metrics grouped with their parent metrics\n  names.sort(function (metric1, metric2) {\n    var parent1 = metric1.split('{', 1)[0];\n    var parent2 = metric2.split('{', 1)[0];\n    var result = parent1.localeCompare(parent2);\n    if (result !== 0) {\n      return result;\n    }\n    var sub1 = metric1.substring(parent1.length);\n    var sub2 = metric2.substring(parent2.length);\n    return sub1.localeCompare(sub2);\n  });\n\n  var getData = function (name) {\n    if (Object.prototype.hasOwnProperty.call(trendCols, name)) {\n      var cols = trendCols[name];\n      var tmpCols = new Array(numTrendColumns);\n      for (let i = 0; i < cols.length; i++) {\n        tmpCols[i] =\n          options.summaryTrendStats[i] +\n          '=' +\n          decorate(cols[i], palette.cyan) +\n          ' '.repeat(trendColMaxLens[i] - strWidth(cols[i]));\n      }\n      return tmpCols.join(' ');\n    }\n\n    var value = nonTrendValues[name];\n    var fmtData =\n      decorate(value, palette.cyan) +\n      ' '.repeat(nonTrendValueMaxLen - strWidth(value));\n\n    var extras = nonTrendExtras[name];\n    if (extras.length == 1) {\n      fmtData =\n        fmtData + ' ' + decorate(extras[0], palette.cyan, palette.faint);\n    } else if (extras.length > 1) {\n      var parts = new Array(extras.length);\n      for (let i = 0; i < extras.length; i++) {\n        parts[i] =\n          decorate(extras[i], palette.cyan, palette.faint) +\n          ' '.repeat(nonTrendExtraMaxLens[i] - strWidth(extras[i]));\n      }\n      fmtData = fmtData + ' ' + parts.join(' ');\n    }\n\n    return fmtData;\n  };\n\n  for (var name of names) {\n    var metric = data.metrics[name];\n    var mark = ' ';\n    var markColor = function (text) {\n      return text;\n    }; // noop\n\n    if (metric.thresholds) {\n      mark = succMark;\n      markColor = function (text) {\n        return decorate(text, palette.green);\n      };\n      forEach(metric.thresholds, function (name, threshold) {\n        if (!threshold.ok) {\n          mark = failMark;\n          markColor = function (text) {\n            return decorate(text, palette.red);\n          };\n          return true; // break\n        }\n      });\n    }\n    var fmtIndent = indentForMetric(name);\n    var fmtName = displayNameForMetric(name);\n    fmtName =\n      fmtName +\n      decorate(\n        '.'.repeat(nameLenMax - strWidth(fmtName) - strWidth(fmtIndent) + 3) +\n          ':',\n        palette.faint,\n      );\n\n    result.push(\n      indent +\n        fmtIndent +\n        markColor(mark) +\n        ' ' +\n        fmtName +\n        ' ' +\n        getData(name),\n    );\n  }\n\n  return result;\n}\n\nfunction generateTextSummary(data, options) {\n  var mergedOpts = Object.assign({}, defaultOptions, data.options, options);\n  var lines = [];\n\n  // TODO: move all of these functions into an object with methods?\n  var decorate = function (text) {\n    return text;\n  };\n  if (mergedOpts.enableColors) {\n    decorate = function (text, color /*, ...rest*/) {\n      var result = '\\x1b[' + color;\n      for (var i = 2; i < arguments.length; i++) {\n        result += ';' + arguments[i];\n      }\n      return result + 'm' + text + '\\x1b[0m';\n    };\n  }\n\n  Array.prototype.push.apply(\n    lines,\n    summarizeGroup(mergedOpts.indent + '    ', data.root_group, decorate),\n  );\n\n  Array.prototype.push.apply(\n    lines,\n    summarizeMetrics(mergedOpts, data, decorate),\n  );\n\n  return lines.join('\\n');\n}\n\nexports.humanizeValue = humanizeValue;\nexports.textSummary = generateTextSummary;\n", "// this is the entry point for the library\n// it exports all the functions that are available to the user\n// it uses also for the bundling and minifying\n// (see package.json's \"build\" script)\nexport { jUnit } from './junit.js';\nexport { humanizeValue, textSummary } from './text.js';\n"],
  "mappings": "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",
  "names": ["require_junit", "__commonJSMin", "exports", "replacements", "escapeHTML", "str", "char", "generateJUnitXML", "data", "options", "name", "classname", "failures", "cases", "metricName", "metric", "thresholdName", "threshold", "testcaseName", "failureMessage", "key", "value", "require_text", "__commonJSMin", "exports", "forEach", "obj", "callback", "key", "palette", "groupPrefix", "detailsPrefix", "succMark", "failMark", "defaultOptions", "strWidth", "s", "data", "inEscSeq", "inLongEscSeq", "width", "char", "summarizeCheck", "indent", "check", "decorate", "succPercent", "summarizeGroup", "group", "result", "i", "displayNameForMetric", "name", "subMetricPos", "indentForMetric", "humanizeBytes", "bytes", "units", "base", "e", "suffix", "val", "unitMap", "toFixedNoTrailingZeros", "prec", "toFixedNoTrailingZerosTrunc", "mult", "humanizeGenericDuration", "dur", "rem", "humanizeDuration", "timeUnit", "humanizeValue", "metric", "nonTrendMetricValueForSum", "summarizeMetrics", "options", "names", "nameLenMax", "nonTrendValues", "nonTrendValueMaxLen", "nonTrendExtras", "nonTrendExtraMaxLens", "trendCols", "numTrendColumns", "trendColMaxLens", "displayName", "displayNameWidth", "cols", "tc", "value", "valLen", "values", "valueLen", "extraLen", "metric1", "metric2", "parent1", "parent2", "sub1", "sub2", "getData", "tmpCols", "fmtData", "extras", "parts", "mark", "markColor", "text", "threshold", "fmtIndent", "fmtName", "generateTextSummary", "mergedOpts", "lines", "color", "src_exports", "__export", "__toCommonJS", "import_junit", "import_text"]
}
